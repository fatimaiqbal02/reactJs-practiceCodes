{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\WebDev\\\\1-MernStack\\\\5-ReactJs\\\\0-ReactJs(FCC)\\\\6-meme-generator\\\\src\\\\Components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"\"\n  });\n  const [allMemes, setAllMemes] = useState([]);\n\n  /*  useEffect(()=>{\r\n       fetch('https://api.imgflip.com/get_memes')\r\n       .then(res => res.json())\r\n       .then(data => setAllMemes(data.data.memes))\r\n   },[]) */\n\n  useEffect(() => {\n    async function getMemes() {\n      const res = await fetch('https://api.imgflip.com/get_memes');\n      const data = await res.json();\n      setAllMemes(data.data.memes);\n    }\n    getMemes();\n  });\n  function getImage() {\n    const randomNo = Math.floor(Math.random() * allMemes.length);\n    const memeUrl = allMemes[randomNo].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImg: memeUrl\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Top-text\",\n        onChange: handleChange,\n        name: \"topText\",\n        value: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Bottom-text\",\n        onChange: handleChange,\n        name: \"bottomText\",\n        value: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getImage,\n        className: \"form-btn\",\n        children: \"Get a new meme image  \\uD83D\\uDDBC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImg,\n        className: \"meme-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"xj4fGPkas+6q3v3kAxCzSh9D53M=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Meme","_s","meme","setMeme","topText","bottomText","randomImg","allMemes","setAllMemes","getMemes","res","fetch","data","json","memes","getImage","randomNo","Math","floor","random","length","memeUrl","url","prevMeme","handleChange","event","name","value","target","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/WebDev/1-MernStack/5-ReactJs/0-ReactJs(FCC)/6-meme-generator/src/Components/Meme.js"],"sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default function Meme() {\r\n\r\n    const[meme, setMeme] = useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImg:\"\"\r\n    })\r\n\r\n    const [allMemes, setAllMemes] = useState([])\r\n\r\n   /*  useEffect(()=>{\r\n        fetch('https://api.imgflip.com/get_memes')\r\n        .then(res => res.json())\r\n        .then(data => setAllMemes(data.data.memes))\r\n    },[]) */\r\n\r\n    useEffect(()=>{\r\n        async function getMemes(){\r\n            const res = await fetch('https://api.imgflip.com/get_memes')\r\n            const data = await res.json()\r\n            setAllMemes(data.data.memes)\r\n        }\r\n        getMemes()\r\n    })\r\n\r\n\r\n    function getImage(){\r\n        const randomNo = Math.floor(Math.random() * allMemes.length)\r\n        const memeUrl = allMemes[randomNo].url\r\n\r\n        setMeme(prevMeme=>({\r\n            ...prevMeme,\r\n            randomImg: memeUrl\r\n        })\r\n        )\r\n    }\r\n\r\n    function handleChange(event){\r\n        const {name, value } = event.target\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            [name]: value\r\n        }))\r\n\r\n    }\r\n    \r\n\r\n  return (\r\n    <main>\r\n        <div className='form'>\r\n            <input className='form-input' type=\"text\" placeholder='Top-text' onChange={handleChange} name= \"topText\" value={meme.topText}/>\r\n            <input className='form-input' type=\"text\" placeholder='Bottom-text' onChange={handleChange} name= \"bottomText\" value={meme.bottomText}/>\r\n            <button onClick={getImage} className='form-btn'>Get a new meme image  ðŸ–¼ </button>\r\n        </div>\r\n        <div className=\"meme\">\r\n                <img src={meme.randomImg} className=\"meme-image\" />\r\n                <h2 className=\"meme-text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n    </main>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC;IAC5BQ,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAC;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE7C;AACH;AACA;AACA;AACA;;EAEIC,SAAS,CAAC,MAAI;IACV,eAAeY,QAAQA,CAAA,EAAE;MACrB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;MAC5D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BL,WAAW,CAACI,IAAI,CAACA,IAAI,CAACE,KAAK,CAAC;IAChC;IACAL,QAAQ,CAAC,CAAC;EACd,CAAC,CAAC;EAGF,SAASM,QAAQA,CAAA,EAAE;IACf,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGZ,QAAQ,CAACa,MAAM,CAAC;IAC5D,MAAMC,OAAO,GAAGd,QAAQ,CAACS,QAAQ,CAAC,CAACM,GAAG;IAEtCnB,OAAO,CAACoB,QAAQ,KAAG;MACf,GAAGA,QAAQ;MACXjB,SAAS,EAAEe;IACf,CAAC,CACD,CAAC;EACL;EAEA,SAASG,YAAYA,CAACC,KAAK,EAAC;IACxB,MAAM;MAACC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACnCzB,OAAO,CAACoB,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACX,CAACG,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EAEP;EAGF,oBACE5B,OAAA;IAAA8B,QAAA,gBACI9B,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjB9B,OAAA;QAAO+B,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,QAAQ,EAAET,YAAa;QAACE,IAAI,EAAE,SAAS;QAACC,KAAK,EAAEzB,IAAI,CAACE;MAAQ;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/HtC,OAAA;QAAO+B,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,aAAa;QAACC,QAAQ,EAAET,YAAa;QAACE,IAAI,EAAE,YAAY;QAACC,KAAK,EAAEzB,IAAI,CAACG;MAAW;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxItC,OAAA;QAAQuC,OAAO,EAAEvB,QAAS;QAACe,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAyB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,eACNtC,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACb9B,OAAA;QAAKwC,GAAG,EAAErC,IAAI,CAACI,SAAU;QAACwB,SAAS,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDtC,OAAA;QAAI+B,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAE3B,IAAI,CAACE;MAAO;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDtC,OAAA;QAAI+B,SAAS,EAAC,kBAAkB;QAAAD,QAAA,EAAE3B,IAAI,CAACG;MAAU;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACpC,EAAA,CA7DuBD,IAAI;AAAAwC,EAAA,GAAJxC,IAAI;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}