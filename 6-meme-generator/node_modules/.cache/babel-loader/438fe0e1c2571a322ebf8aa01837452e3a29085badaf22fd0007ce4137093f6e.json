{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\WebDev\\\\1-MernStack\\\\5-ReactJs\\\\0-ReactJs(FCC)\\\\6-meme-generator\\\\src\\\\Components\\\\Meme(Ex).js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport memesData from '../memesData';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  /*function getImage(){\r\n      const memeArray = memesData.data.memes\r\n      const randomNo = Math.floor(Math.random() * memeArray.length)\r\n      console.log(randomNo)\r\n      const url = memeArray[randomNo].url\r\n      console.log(url)\r\n  }*/\n\n  const [memeUrl, setMemeurl] = useState(\" \");\n  function getImage() {\n    const memeArray = memesData.data.memes;\n    const randomNo = Math.floor(Math.random() * memeArray.length);\n    setMemeurl(memeArray[randomNo].url);\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Top-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Bottom-text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getImage,\n        className: \"form-btn\",\n        children: \"Get a new meme image  \\uD83D\\uDDBC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: memeUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"RqJ2kMAzkvjdK0nfuY55So7E0HY=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","useState","jsxDEV","_jsxDEV","Meme","_s","memeUrl","setMemeurl","getImage","memeArray","data","memes","randomNo","Math","floor","random","length","url","children","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/WebDev/1-MernStack/5-ReactJs/0-ReactJs(FCC)/6-meme-generator/src/Components/Meme(Ex).js"],"sourcesContent":["import React from 'react'\r\nimport memesData from '../memesData'\r\nimport {useState} from 'react'\r\n\r\nexport default function Meme() {\r\n    \r\n    /*function getImage(){\r\n        const memeArray = memesData.data.memes\r\n        const randomNo = Math.floor(Math.random() * memeArray.length)\r\n        console.log(randomNo)\r\n        const url = memeArray[randomNo].url\r\n        console.log(url)\r\n    }*/\r\n  \r\n    const[memeUrl, setMemeurl] =  useState(\" \")\r\n\r\n    function getImage(){\r\n        const memeArray = memesData.data.memes\r\n        const randomNo = Math.floor(Math.random() * memeArray.length)\r\n        setMemeurl(memeArray[randomNo].url)\r\n    }\r\n        \r\n\r\n  return (\r\n    <main>\r\n        <div className='form'>\r\n            <input className='form-input' type=\"text\" placeholder='Top-text'/>\r\n            <input className='form-input' type=\"text\" placeholder='Bottom-text'/>\r\n            <button onClick={getImage} className='form-btn'>Get a new meme image  ðŸ–¼ </button>\r\n            <img src={memeUrl} alt=\"\" />\r\n        </div>\r\n    </main>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,cAAc;AACpC,SAAQC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B;AACJ;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAIN,QAAQ,CAAC,GAAG,CAAC;EAE3C,SAASO,QAAQA,CAAA,EAAE;IACf,MAAMC,SAAS,GAAGT,SAAS,CAACU,IAAI,CAACC,KAAK;IACtC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,SAAS,CAACO,MAAM,CAAC;IAC7DT,UAAU,CAACE,SAAS,CAACG,QAAQ,CAAC,CAACK,GAAG,CAAC;EACvC;EAGF,oBACEd,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAKgB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBf,OAAA;QAAOgB,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClEtB,OAAA;QAAOgB,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrEtB,OAAA;QAAQuB,OAAO,EAAElB,QAAS;QAACW,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAyB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClFtB,OAAA;QAAKwB,GAAG,EAAErB,OAAQ;QAACsB,GAAG,EAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX;AAACpB,EAAA,CA7BuBD,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}