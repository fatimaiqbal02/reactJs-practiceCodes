{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\WebDev\\\\1-MernStack\\\\5-ReactJs\\\\0-ReactJs(FCC)\\\\6-meme-generator\\\\src\\\\Components\\\\Meme.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport memesData from '../memesData';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n  useEffect(() => {\n    fetch('https://api.imgflip.com/get_memes').then(res => res.json()).then(prevMeme => setMeme(prevMeme));\n  }, []);\n  const [meme, setMeme] = useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImg: \"\"\n  });\n  const [allMemeImages, setAllMemeImages] = useState(memesData);\n  function getImage() {\n    const memeArray = allMemeImages.data.memes;\n    const randomNo = Math.floor(Math.random() * memeArray.length);\n    const memeUrl = memeArray[randomNo].url;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      randomImg: memeUrl\n    }));\n  }\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({\n      ...prevMeme,\n      [name]: value\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Top-text\",\n        onChange: handleChange,\n        name: \"topText\",\n        value: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        type: \"text\",\n        placeholder: \"Bottom-text\",\n        onChange: handleChange,\n        name: \"bottomText\",\n        value: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getImage,\n        className: \"form-btn\",\n        children: \"Get a new meme image  \\uD83D\\uDDBC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImg,\n        className: \"meme-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme-text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Meme, \"NKRwCANYhtzoORTIH0w3v5dZpDA=\");\n_c = Meme;\nvar _c;\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","memesData","useState","useEffect","jsxDEV","_jsxDEV","Meme","_s","fetch","then","res","json","prevMeme","setMeme","meme","topText","bottomText","randomImg","allMemeImages","setAllMemeImages","getImage","memeArray","data","memes","randomNo","Math","floor","random","length","memeUrl","url","handleChange","event","name","value","target","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/WebDev/1-MernStack/5-ReactJs/0-ReactJs(FCC)/6-meme-generator/src/Components/Meme.js"],"sourcesContent":["import React from 'react'\r\nimport memesData from '../memesData'\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default function Meme() {\r\n\r\n    useEffect(()=>{\r\n        fetch('https://api.imgflip.com/get_memes').\r\n        then(res => res.json()).\r\n        then(prevMeme => setMeme(prevMeme))\r\n    },[])\r\n\r\n    const[meme, setMeme] = useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImg:\"\"\r\n    })\r\n\r\n    const [allMemeImages, setAllMemeImages] = useState(memesData)\r\n\r\n    function getImage(){\r\n        const memeArray = allMemeImages.data.memes\r\n        const randomNo = Math.floor(Math.random() * memeArray.length)\r\n        const memeUrl = memeArray[randomNo].url\r\n\r\n        setMeme(prevMeme=>({\r\n            ...prevMeme,\r\n            randomImg: memeUrl\r\n        })\r\n        )\r\n    }\r\n\r\n    function handleChange(event){\r\n        const {name, value } = event.target\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            [name]: value\r\n        }))\r\n\r\n    }\r\n    \r\n\r\n  return (\r\n    <main>\r\n        <div className='form'>\r\n            <input className='form-input' type=\"text\" placeholder='Top-text' onChange={handleChange} name= \"topText\" value={meme.topText}/>\r\n            <input className='form-input' type=\"text\" placeholder='Bottom-text' onChange={handleChange} name= \"bottomText\" value={meme.bottomText}/>\r\n            <button onClick={getImage} className='form-btn'>Get a new meme image  ðŸ–¼ </button>\r\n        </div>\r\n        <div className=\"meme\">\r\n                <img src={meme.randomImg} className=\"meme-image\" />\r\n                <h2 className=\"meme-text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme-text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n    </main>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,cAAc;AACpC,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3BJ,SAAS,CAAC,MAAI;IACVK,KAAK,CAAC,mCAAmC,CAAC,CAC1CC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,QAAQ,IAAIC,OAAO,CAACD,QAAQ,CAAC,CAAC;EACvC,CAAC,EAAC,EAAE,CAAC;EAEL,MAAK,CAACE,IAAI,EAAED,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAC5Ba,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAC;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAACD,SAAS,CAAC;EAE7D,SAASmB,QAAQA,CAAA,EAAE;IACf,MAAMC,SAAS,GAAGH,aAAa,CAACI,IAAI,CAACC,KAAK;IAC1C,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,SAAS,CAACO,MAAM,CAAC;IAC7D,MAAMC,OAAO,GAAGR,SAAS,CAACG,QAAQ,CAAC,CAACM,GAAG;IAEvCjB,OAAO,CAACD,QAAQ,KAAG;MACf,GAAGA,QAAQ;MACXK,SAAS,EAAEY;IACf,CAAC,CACD,CAAC;EACL;EAEA,SAASE,YAAYA,CAACC,KAAK,EAAC;IACxB,MAAM;MAACC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACnCtB,OAAO,CAACD,QAAQ,KAAK;MACjB,GAAGA,QAAQ;MACX,CAACqB,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EAEP;EAGF,oBACE7B,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjB/B,OAAA;QAAOgC,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,QAAQ,EAAET,YAAa;QAACE,IAAI,EAAE,SAAS;QAACC,KAAK,EAAEpB,IAAI,CAACC;MAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/HvC,OAAA;QAAOgC,SAAS,EAAC,YAAY;QAACC,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,aAAa;QAACC,QAAQ,EAAET,YAAa;QAACE,IAAI,EAAE,YAAY;QAACC,KAAK,EAAEpB,IAAI,CAACE;MAAW;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxIvC,OAAA;QAAQwC,OAAO,EAAEzB,QAAS;QAACiB,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAyB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,eACNvC,OAAA;MAAKgC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACb/B,OAAA;QAAKyC,GAAG,EAAEhC,IAAI,CAACG,SAAU;QAACoB,SAAS,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDvC,OAAA;QAAIgC,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAEtB,IAAI,CAACC;MAAO;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDvC,OAAA;QAAIgC,SAAS,EAAC,kBAAkB;QAAAD,QAAA,EAAEtB,IAAI,CAACE;MAAU;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;AAACrC,EAAA,CApDuBD,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}